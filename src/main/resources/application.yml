
#server port
server:
  port: 8000

# oracle config
spring:
  datasource:
    driver-class-name: oracle.jdbc.driver.OracleDriver
    url: jdbc:oracle:thin:@localhost:1521:xe
    username: C##EMPLOYEE
    password: EMPLOYEE
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    cache: false
    check-template-location: true

  image:
    image-dir: src/main/resources
  jpa:
    open-in-view: false

# mybatis config
mybatis:
  mapper-locations: mappers/**/*.xml
  configuration:
    map-underscore-to-camel-case: true

# security
security:
  oauth2:
    client:
      registration:
        google:
          client-id:
          client-secret:
            scope:
            - email
            - profile

        facebook:
          client-id:
          client-secret:
          scope:
            - email
            - profile
          naver:
            client-id:
            client-secret:
            scope:
              - name
              - email
              - profile_image
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

          provider:
            naver:
              authorization-uri: https://nid.naver.com/oauth2.0/authorize
              token-uri: https://nid.naver.com/oauth2.0/token
              user-info-uri: https://openapi.naver.com/v1/nid/me
              user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌.


logging:
  level:
    org.springframework.security: DEBUG

